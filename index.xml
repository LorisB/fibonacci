<fibonacci input='32' date='2022-03-02' uname='Linux fibonacci 5.4.0-97-generic #110-Ubuntu SMP Thu Jan 13 18:22:13 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux'><headers><h m='file' short='Program' type='text'>File name as it's seen in the source code repository</h><h m='instructions' short='ASM'>Total number of Assembly instructions seen in the compiled .asm file; not every compiler provides this information though</h><h m='cycles' short='Cycles'>How many times the Fibonacci number has been calculated</h><h m='time' short='Time'>How many seconds it took to execute all calculations</h><h m='time_per_cycle' short='SPC'>How many seconds per each calculation</h><h m='ticks' short='Ticks'>How many total CPU ticks it took to execute all calculations, according to perf</h><h m='ticks_per_cycle' short='TPC'>How many ticks per a single calculation</h><h m='ghz' short='GHz'>TPC divided by SPC and divided by one billion; this is approximately how fast is the CPU; this metric for all programs is expected to have almost the same values, otherwise something is wrong with the method</h></headers><programs><program> 	<file>cpp/interpreter.cpp</file> 	<name>cpp-interpreter</name> 	<instructions>3299</instructions> 	<cycles>32768</cycles> 	<time>1.98</time> 	<time_per_cycle>.0000604248046875</time_per_cycle> 	<ticks>6659778479</ticks> 	<ticks_per_cycle>203240</ticks_per_cycle> 	</program>
<program> 	<file>cpp/formula.cpp</file> 	<name>cpp-formula</name> 	<instructions>159</instructions> 	<cycles>33554432</cycles> 	<time>1.05</time> 	<time_per_cycle>.0000000312924385</time_per_cycle> 	<ticks>3454369411</ticks> 	<ticks_per_cycle>102</ticks_per_cycle> 	</program>
<program> 	<file>cpp/recursion.cpp</file> 	<name>cpp-recursion</name> 	<instructions>68</instructions> 	<cycles>256</cycles> 	<time>2.11</time> 	<time_per_cycle>.0082421875000000</time_per_cycle> 	<ticks>6100463878</ticks> 	<ticks_per_cycle>23829937</ticks_per_cycle> 	</program>
<program> 	<file>cpp/static_member_functions.cpp</file> 	<name>cpp-static_member_functions</name> 	<instructions>69</instructions> 	<cycles>256</cycles> 	<time>2.21</time> 	<time_per_cycle>.0086328125000000</time_per_cycle> 	<ticks>7221664730</ticks> 	<ticks_per_cycle>28209627</ticks_per_cycle> 	</program>
<program> 	<file>cpp/decorators.cpp</file> 	<name>cpp-decorators</name> 	<instructions>187</instructions> 	<cycles>256</cycles> 	<time>3.12</time> 	<time_per_cycle>.0121875000000000</time_per_cycle> 	<ticks>10496938399</ticks> 	<ticks_per_cycle>41003665</ticks_per_cycle> 	</program>
<program> 	<file>cpp/functions_with_new.cpp</file> 	<name>cpp-functions_with_new</name> 	<instructions>199</instructions> 	<cycles>4</cycles> 	<time>14.01</time> 	<time_per_cycle>3.5025000000000000</time_per_cycle> 	<ticks>46781713360</ticks> 	<ticks_per_cycle>11695428340</ticks_per_cycle> 	</program>
<program> 	<file>cpp/stack_objects.cpp</file> 	<name>cpp-stack_objects</name> 	<instructions>82</instructions> 	<cycles>256</cycles> 	<time>3.68</time> 	<time_per_cycle>.0143750000000000</time_per_cycle> 	<ticks>12291566790</ticks> 	<ticks_per_cycle>48013932</ticks_per_cycle> 	</program>
<program> 	<file>cpp/lambdas.cpp</file> 	<name>cpp-lambdas</name> 	<instructions>485</instructions> 	<cycles>2</cycles> 	<time>11.15</time> 	<time_per_cycle>5.5750000000000000</time_per_cycle> 	<ticks>35637915167</ticks> 	<ticks_per_cycle>17818957583</ticks_per_cycle> 	</program>
<program> 	<file>cpp/objects.cpp</file> 	<name>cpp-objects</name> 	<instructions>432</instructions> 	<cycles>2</cycles> 	<time>11.13</time> 	<time_per_cycle>5.5650000000000000</time_per_cycle> 	<ticks>37838415115</ticks> 	<ticks_per_cycle>18919207557</ticks_per_cycle> 	</program>
<program> 	<file>cpp/loop.cpp</file> 	<name>cpp-loop</name> 	<instructions>126</instructions> 	<cycles>268435456</cycles> 	<time>1.87</time> 	<time_per_cycle>.0000000069662928</time_per_cycle> 	<ticks>6432259588</ticks> 	<ticks_per_cycle>23</ticks_per_cycle> 	</program>
<program> 	<file>cpp/inlines.cpp</file> 	<name>cpp-inlines</name> 	<instructions>68</instructions> 	<cycles>256</cycles> 	<time>1.82</time> 	<time_per_cycle>.0071093750000000</time_per_cycle> 	<ticks>6059244788</ticks> 	<ticks_per_cycle>23668924</ticks_per_cycle> 	</program>
<program> 	<file>cpp/matrixes.cpp</file> 	<name>cpp-matrixes</name> 	<instructions>166</instructions> 	<cycles>134217728</cycles> 	<time>1.81</time> 	<time_per_cycle>.0000000134855508</time_per_cycle> 	<ticks>5718863394</ticks> 	<ticks_per_cycle>42</ticks_per_cycle> 	</program>
<program> 	<file>cpp/binpow-matrix.cpp</file> 	<name>cpp-binpow-matrix</name> 	<instructions>165</instructions> 	<cycles>67108864</cycles> 	<time>1.68</time> 	<time_per_cycle>.0000000250339508</time_per_cycle> 	<ticks>5586403878</ticks> 	<ticks_per_cycle>83</ticks_per_cycle> 	</program>
<program> 	<file>cpp/functions.cpp</file> 	<name>cpp-functions</name> 	<instructions>86</instructions> 	<cycles>256</cycles> 	<time>7.89</time> 	<time_per_cycle>.0308203125000000</time_per_cycle> 	<ticks>25819596259</ticks> 	<ticks_per_cycle>100857797</ticks_per_cycle> 	</program>
<program> 	<file>rust/structs.rs</file> 	<name>rust-structs</name> 	<instructions>706</instructions> 	<cycles>256</cycles> 	<time>225.18</time> 	<time_per_cycle>.8796093750000000</time_per_cycle> 	<ticks>720168746649</ticks> 	<ticks_per_cycle>2813159166</ticks_per_cycle> 	</program>
<program> 	<file>rust/recursion.rs</file> 	<name>rust-recursion</name> 	<instructions>594</instructions> 	<cycles>2147483648</cycles> 	<time>0.01</time> 	<time_per_cycle>.0000000000046566</time_per_cycle> 	<ticks>32715362</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>lisp/recursion.lisp</file> 	<name>lisp-recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>11.40</time> 	<time_per_cycle>.0445312500000000</time_per_cycle> 	<ticks>37451349946</ticks> 	<ticks_per_cycle>146294335</ticks_per_cycle> 	</program>
<program> 	<file>haskell/recursion.hi haskell/recursion.hs</file> 	<name>haskell-recursion</name> 	<instructions>1184</instructions> 	<cycles>256</cycles> 	<time>42.12</time> 	<time_per_cycle>.1645312500000000</time_per_cycle> 	<ticks>137458009178</ticks> 	<ticks_per_cycle>536945348</ticks_per_cycle> 	</program>
<program> 	<file>haskell/polymorphic_recursion.hi haskell/polymorphic_recursion.hs</file> 	<name>haskell-polymorphic_recursion</name> 	<instructions>2226</instructions> 	<cycles>8</cycles> 	<time>17.49</time> 	<time_per_cycle>2.1862500000000000</time_per_cycle> 	<ticks>53782647147</ticks> 	<ticks_per_cycle>6722830893</ticks_per_cycle> 	</program>
<program> 	<file>haskell/iterate.hi haskell/iterate.hs</file> 	<name>haskell-iterate</name> 	<instructions>1174</instructions> 	<cycles>1048576</cycles> 	<time>1.75</time> 	<time_per_cycle>.0000016689300537</time_per_cycle> 	<ticks>4574278785</ticks> 	<ticks_per_cycle>4362</ticks_per_cycle> 	</program>
<program> 	<file>haskell/zipwith.hi haskell/zipwith.hs</file> 	<name>haskell-zipwith</name> 	<instructions>1150</instructions> 	<cycles>4194304</cycles> 	<time>1.70</time> 	<time_per_cycle>.0000004053115844</time_per_cycle> 	<ticks>5485228187</ticks> 	<ticks_per_cycle>1307</ticks_per_cycle> 	</program>
<program> 	<file>haskell/objects.hi haskell/objects.hs</file> 	<name>haskell-objects</name> 	<instructions>1356</instructions> 	<cycles>8</cycles> 	<time>12.55</time> 	<time_per_cycle>1.5687500000000000</time_per_cycle> 	<ticks>41362814309</ticks> 	<ticks_per_cycle>5170351788</ticks_per_cycle> 	</program>
<program> 	<file>haskell/object_dynamic.hi haskell/object_dynamic.hs</file> 	<name>haskell-object_dynamic</name> 	<instructions>1313</instructions> 	<cycles>262144</cycles> 	<time>1.97</time> 	<time_per_cycle>.0000075149536132</time_per_cycle> 	<ticks>6596897802</ticks> 	<ticks_per_cycle>25165</ticks_per_cycle> 	</program>
<program> 	<file>haskell/tail_recursion.hi haskell/tail_recursion.hs</file> 	<name>haskell-tail_recursion</name> 	<instructions>1204</instructions> 	<cycles>524288</cycles> 	<time>1.40</time> 	<time_per_cycle>.0000026702880859</time_per_cycle> 	<ticks>4509030547</ticks> 	<ticks_per_cycle>8600</ticks_per_cycle> 	</program>
<program> 	<file>haskell/adt.hi haskell/adt.hs</file> 	<name>haskell-adt</name> 	<instructions>1289</instructions> 	<cycles>256</cycles> 	<time>72.68</time> 	<time_per_cycle>.2839062500000000</time_per_cycle> 	<ticks>237735780007</ticks> 	<ticks_per_cycle>928655390</ticks_per_cycle> 	</program>
<program> 	<file></file> 	<name>go-fast</name> 	<instructions>1</instructions> 	<cycles>134217728</cycles> 	<time>1.77</time> 	<time_per_cycle>.0000000131875276</time_per_cycle> 	<ticks>5905708241</ticks> 	<ticks_per_cycle>44</ticks_per_cycle> 	</program>
<program> 	<file></file> 	<name>go-structs</name> 	<instructions>1</instructions> 	<cycles>4</cycles> 	<time>20.58</time> 	<time_per_cycle>5.1450000000000000</time_per_cycle> 	<ticks>70639002575</ticks> 	<ticks_per_cycle>17659750643</ticks_per_cycle> 	</program>
<program> 	<file></file> 	<name>go-recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>3.90</time> 	<time_per_cycle>.0152343750000000</time_per_cycle> 	<ticks>12648596461</ticks> 	<ticks_per_cycle>49408579</ticks_per_cycle> 	</program>
<program> 	<file>java/Objects.java</file> 	<name>java-Objects</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>229.23</time> 	<time_per_cycle>.8954296875000000</time_per_cycle> 	<ticks>738091108033</ticks> 	<ticks_per_cycle>2883168390</ticks_per_cycle> 	</program>
<program> 	<file>java/Functions.java</file> 	<name>java-Functions</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>3.07</time> 	<time_per_cycle>.0119921875000000</time_per_cycle> 	<ticks>9999102270</ticks> 	<ticks_per_cycle>39058993</ticks_per_cycle> 	</program>
<program> 	<file>java/Recursion.java</file> 	<name>java-Recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>3.08</time> 	<time_per_cycle>.0120312500000000</time_per_cycle> 	<ticks>10087190265</ticks> 	<ticks_per_cycle>39403086</ticks_per_cycle> 	</program>
</programs></fibonacci>