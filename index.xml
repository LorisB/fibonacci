<fibonacci input='32' date='2022-03-02' uname='Linux fibonacci 5.4.0-97-generic #110-Ubuntu SMP Thu Jan 13 18:22:13 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux'><headers><h m='file' short='Program' type='text'>File name as it's seen in the source code repository</h><h m='instructions' short='ASM'>Total number of Assembly instructions seen in the compiled .asm file; not every compiler provides this information though</h><h m='cycles' short='Cycles'>How many times the Fibonacci number has been calculated</h><h m='time' short='Time'>How many seconds it took to execute all calculations</h><h m='time_per_cycle' short='SPC'>How many seconds per each calculation</h><h m='ticks' short='Ticks'>How many total CPU ticks it took to execute all calculations, according to perf</h><h m='ticks_per_cycle' short='TPC'>How many ticks per a single calculation</h><h m='ghz' short='GHz'>TPC divided by SPC and divided by one billion; this is approximately how fast is the CPU; this metric for all programs is expected to have almost the same values, otherwise something is wrong with the method</h></headers><programs><program> 	<file>cpp/interpreter.cpp</file> 	<name>cpp-interpreter</name> 	<instructions>3299</instructions> 	<cycles>16384</cycles> 	<time>1.14</time> 	<time_per_cycle>.0000695800781250</time_per_cycle> 	<ticks>3435186207</ticks> 	<ticks_per_cycle>209667</ticks_per_cycle> 	</program>
<program> 	<file>cpp/formula.cpp</file> 	<name>cpp-formula</name> 	<instructions>159</instructions> 	<cycles>33554432</cycles> 	<time>1.17</time> 	<time_per_cycle>.0000000348687171</time_per_cycle> 	<ticks>3597747512</ticks> 	<ticks_per_cycle>107</ticks_per_cycle> 	</program>
<program> 	<file>cpp/recursion.cpp</file> 	<name>cpp-recursion</name> 	<instructions>68</instructions> 	<cycles>256</cycles> 	<time>1.98</time> 	<time_per_cycle>.0077343750000000</time_per_cycle> 	<ticks>6103548331</ticks> 	<ticks_per_cycle>23841985</ticks_per_cycle> 	</program>
<program> 	<file>cpp/static_member_functions.cpp</file> 	<name>cpp-static_member_functions</name> 	<instructions>69</instructions> 	<cycles>256</cycles> 	<time>2.45</time> 	<time_per_cycle>.0095703125000000</time_per_cycle> 	<ticks>7376379335</ticks> 	<ticks_per_cycle>28813981</ticks_per_cycle> 	</program>
<program> 	<file>cpp/decorators.cpp</file> 	<name>cpp-decorators</name> 	<instructions>187</instructions> 	<cycles>256</cycles> 	<time>3.60</time> 	<time_per_cycle>.0140625000000000</time_per_cycle> 	<ticks>10801472902</ticks> 	<ticks_per_cycle>42193253</ticks_per_cycle> 	</program>
<program> 	<file>cpp/functions_with_new.cpp</file> 	<name>cpp-functions_with_new</name> 	<instructions>199</instructions> 	<cycles>4</cycles> 	<time>15.95</time> 	<time_per_cycle>3.9875000000000000</time_per_cycle> 	<ticks>49357181934</ticks> 	<ticks_per_cycle>12339295483</ticks_per_cycle> 	</program>
<program> 	<file>cpp/stack_objects.cpp</file> 	<name>cpp-stack_objects</name> 	<instructions>82</instructions> 	<cycles>256</cycles> 	<time>3.96</time> 	<time_per_cycle>.0154687500000000</time_per_cycle> 	<ticks>12368050013</ticks> 	<ticks_per_cycle>48312695</ticks_per_cycle> 	</program>
<program> 	<file>cpp/lambdas.cpp</file> 	<name>cpp-lambdas</name> 	<instructions>485</instructions> 	<cycles>2</cycles> 	<time>11.88</time> 	<time_per_cycle>5.9400000000000000</time_per_cycle> 	<ticks>37820027174</ticks> 	<ticks_per_cycle>18910013587</ticks_per_cycle> 	</program>
<program> 	<file>cpp/objects.cpp</file> 	<name>cpp-objects</name> 	<instructions>432</instructions> 	<cycles>2</cycles> 	<time>12.87</time> 	<time_per_cycle>6.4350000000000000</time_per_cycle> 	<ticks>38716218831</ticks> 	<ticks_per_cycle>19358109415</ticks_per_cycle> 	</program>
<program> 	<file>cpp/loop.cpp</file> 	<name>cpp-loop</name> 	<instructions>126</instructions> 	<cycles>134217728</cycles> 	<time>1.00</time> 	<time_per_cycle>.0000000074505805</time_per_cycle> 	<ticks>3111338155</ticks> 	<ticks_per_cycle>23</ticks_per_cycle> 	</program>
<program> 	<file>cpp/inlines.cpp</file> 	<name>cpp-inlines</name> 	<instructions>68</instructions> 	<cycles>256</cycles> 	<time>1.97</time> 	<time_per_cycle>.0076953125000000</time_per_cycle> 	<ticks>6239670577</ticks> 	<ticks_per_cycle>24373713</ticks_per_cycle> 	</program>
<program> 	<file>cpp/matrixes.cpp</file> 	<name>cpp-matrixes</name> 	<instructions>166</instructions> 	<cycles>134217728</cycles> 	<time>1.86</time> 	<time_per_cycle>.0000000138580799</time_per_cycle> 	<ticks>5819702771</ticks> 	<ticks_per_cycle>43</ticks_per_cycle> 	</program>
<program> 	<file>cpp/binpow-matrix.cpp</file> 	<name>cpp-binpow-matrix</name> 	<instructions>165</instructions> 	<cycles>67108864</cycles> 	<time>1.80</time> 	<time_per_cycle>.0000000268220901</time_per_cycle> 	<ticks>5494444705</ticks> 	<ticks_per_cycle>81</ticks_per_cycle> 	</program>
<program> 	<file>cpp/functions.cpp</file> 	<name>cpp-functions</name> 	<instructions>86</instructions> 	<cycles>256</cycles> 	<time>8.66</time> 	<time_per_cycle>.0338281250000000</time_per_cycle> 	<ticks>26247656060</ticks> 	<ticks_per_cycle>102529906</ticks_per_cycle> 	</program>
<program> 	<file>rust/structs.rs</file> 	<name>rust-structs</name> 	<instructions>706</instructions> 	<cycles>256</cycles> 	<time>246.77</time> 	<time_per_cycle>.9639453125000000</time_per_cycle> 	<ticks>746615833404</ticks> 	<ticks_per_cycle>2916468099</ticks_per_cycle> 	</program>
<program> 	<file>rust/recursion.rs</file> 	<name>rust-recursion</name> 	<instructions>594</instructions> 	<cycles>2147483648</cycles> 	<time>0.01</time> 	<time_per_cycle>.0000000000046566</time_per_cycle> 	<ticks>30574906</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>lisp/recursion.lisp</file> 	<name>lisp-recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>11.66</time> 	<time_per_cycle>.0455468750000000</time_per_cycle> 	<ticks>37669019496</ticks> 	<ticks_per_cycle>147144607</ticks_per_cycle> 	</program>
<program> 	<file>haskell/recursion.hi haskell/recursion.hs</file> 	<name>haskell-recursion</name> 	<instructions>1184</instructions> 	<cycles>256</cycles> 	<time>45.02</time> 	<time_per_cycle>.1758593750000000</time_per_cycle> 	<ticks>138404816216</ticks> 	<ticks_per_cycle>540643813</ticks_per_cycle> 	</program>
<program> 	<file>haskell/iterate.hi haskell/iterate.hs</file> 	<name>haskell-iterate</name> 	<instructions>1174</instructions> 	<cycles>1048576</cycles> 	<time>1.40</time> 	<time_per_cycle>.0000013351440429</time_per_cycle> 	<ticks>4449543095</ticks> 	<ticks_per_cycle>4243</ticks_per_cycle> 	</program>
<program> 	<file>haskell/zipwith.hi haskell/zipwith.hs</file> 	<name>haskell-zipwith</name> 	<instructions>1150</instructions> 	<cycles>4194304</cycles> 	<time>1.81</time> 	<time_per_cycle>.0000004315376281</time_per_cycle> 	<ticks>5921404970</ticks> 	<ticks_per_cycle>1411</ticks_per_cycle> 	</program>
<program> 	<file>haskell/polymorphic_recursion.hi haskell/polymorphic_recursion.hs</file> 	<name>haskell-polymorphic_recursion</name> 	<instructions>2226</instructions> 	<cycles>8</cycles> 	<time>18.89</time> 	<time_per_cycle>2.3612500000000000</time_per_cycle> 	<ticks>54835180781</ticks> 	<ticks_per_cycle>6854397597</ticks_per_cycle> 	</program>
<program> 	<file>haskell/object_dynamic.hi haskell/object_dynamic.hs</file> 	<name>haskell-object_dynamic</name> 	<instructions>1313</instructions> 	<cycles>131072</cycles> 	<time>1.08</time> 	<time_per_cycle>.0000082397460937</time_per_cycle> 	<ticks>3445470509</ticks> 	<ticks_per_cycle>26286</ticks_per_cycle> 	</program>
<program> 	<file>haskell/tail_recursion.hi haskell/tail_recursion.hs</file> 	<name>haskell-tail_recursion</name> 	<instructions>1204</instructions> 	<cycles>524288</cycles> 	<time>1.45</time> 	<time_per_cycle>.0000027656555175</time_per_cycle> 	<ticks>4505448139</ticks> 	<ticks_per_cycle>8593</ticks_per_cycle> 	</program>
<program> 	<file>haskell/object.hi haskell/object.hs</file> 	<name>haskell-object</name> 	<instructions>1356</instructions> 	<cycles>8</cycles> 	<time>13.40</time> 	<time_per_cycle>1.6750000000000000</time_per_cycle> 	<ticks>42288161081</ticks> 	<ticks_per_cycle>5286020135</ticks_per_cycle> 	</program>
<program> 	<file>haskell/adt.hi haskell/adt.hs</file> 	<name>haskell-adt</name> 	<instructions>1289</instructions> 	<cycles>256</cycles> 	<time>78.60</time> 	<time_per_cycle>.3070312500000000</time_per_cycle> 	<ticks>239534553110</ticks> 	<ticks_per_cycle>935681848</ticks_per_cycle> 	</program>
<program> 	<file></file> 	<name>go-fast</name> 	<instructions>1</instructions> 	<cycles>134217728</cycles> 	<time>1.89</time> 	<time_per_cycle>.0000000140815973</time_per_cycle> 	<ticks>5861502144</ticks> 	<ticks_per_cycle>43</ticks_per_cycle> 	</program>
<program> 	<file></file> 	<name>go-structs</name> 	<instructions>1</instructions> 	<cycles>2</cycles> 	<time>11.38</time> 	<time_per_cycle>5.6900000000000000</time_per_cycle> 	<ticks>36033477477</ticks> 	<ticks_per_cycle>18016738738</ticks_per_cycle> 	</program>
<program> 	<file></file> 	<name>go-recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>4.25</time> 	<time_per_cycle>.0166015625000000</time_per_cycle> 	<ticks>13307764699</ticks> 	<ticks_per_cycle>51983455</ticks_per_cycle> 	</program>
<program> 	<file>java/Objects.java</file> 	<name>java-Objects</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>247.19</time> 	<time_per_cycle>.9655859375000000</time_per_cycle> 	<ticks>738875543667</ticks> 	<ticks_per_cycle>2886232592</ticks_per_cycle> 	</program>
<program> 	<file>java/Functions.java</file> 	<name>java-Functions</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>3.33</time> 	<time_per_cycle>.0130078125000000</time_per_cycle> 	<ticks>10499860538</ticks> 	<ticks_per_cycle>41015080</ticks_per_cycle> 	</program>
<program> 	<file>java/Recursion.java</file> 	<name>java-Recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>3.60</time> 	<time_per_cycle>.0140625000000000</time_per_cycle> 	<ticks>10313063373</ticks> 	<ticks_per_cycle>40285403</ticks_per_cycle> 	</program>
</programs></fibonacci>