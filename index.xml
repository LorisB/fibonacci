<fibonacci input='32' date='2022-03-02' uname='Linux fibonacci 5.4.0-97-generic #110-Ubuntu SMP Thu Jan 13 18:22:13 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux'><headers><h m='file' short='Program' type='text'>File name as it's seen in the source code repository</h><h m='instructions' short='ASM'>Total number of Assembly instructions seen in the compiled .asm file; not every compiler provides this information though</h><h m='cycles' short='Cycles'>How many times the Fibonacci number has been calculated</h><h m='time' short='Time'>How many seconds it took to execute all calculations</h><h m='time_per_cycle' short='SPC'>How many seconds per each calculation</h><h m='ticks' short='Ticks'>How many total CPU ticks it took to execute all calculations, according to perf</h><h m='ticks_per_cycle' short='TPC'>How many ticks per a single calculation</h><h m='ghz' short='GHz'>TPC divided by SPC and divided by one billion; this is approximately how fast is the CPU; this metric for all programs is expected to have almost the same values, otherwise something is wrong with the method</h></headers><programs><program> 	<file>cpp/interpreter.cpp</file> 	<name>cpp-interpreter</name> 	<instructions>3299</instructions> 	<cycles>16384</cycles> 	<time>1.11</time> 	<time_per_cycle>.0000677490234375</time_per_cycle> 	<ticks>3326382606</ticks> 	<ticks_per_cycle>203026</ticks_per_cycle> 	</program>
<program> 	<file>cpp/formula.cpp</file> 	<name>cpp-formula</name> 	<instructions>159</instructions> 	<cycles>33554432</cycles> 	<time>1.43</time> 	<time_per_cycle>.0000000426173210</time_per_cycle> 	<ticks>3933676623</ticks> 	<ticks_per_cycle>117</ticks_per_cycle> 	</program>
<program> 	<file>cpp/recursion.cpp</file> 	<name>cpp-recursion</name> 	<instructions>68</instructions> 	<cycles>256</cycles> 	<time>1.98</time> 	<time_per_cycle>.0077343750000000</time_per_cycle> 	<ticks>6275261634</ticks> 	<ticks_per_cycle>24512740</ticks_per_cycle> 	</program>
<program> 	<file>cpp/static_member_functions.cpp</file> 	<name>cpp-static_member_functions</name> 	<instructions>69</instructions> 	<cycles>256</cycles> 	<time>2.29</time> 	<time_per_cycle>.0089453125000000</time_per_cycle> 	<ticks>7222333971</ticks> 	<ticks_per_cycle>28212242</ticks_per_cycle> 	</program>
<program> 	<file>cpp/decorators.cpp</file> 	<name>cpp-decorators</name> 	<instructions>187</instructions> 	<cycles>256</cycles> 	<time>3.37</time> 	<time_per_cycle>.0131640625000000</time_per_cycle> 	<ticks>10303474688</ticks> 	<ticks_per_cycle>40247948</ticks_per_cycle> 	</program>
<program> 	<file>cpp/functions_with_new.cpp</file> 	<name>cpp-functions_with_new</name> 	<instructions>199</instructions> 	<cycles>4</cycles> 	<time>15.52</time> 	<time_per_cycle>3.8800000000000000</time_per_cycle> 	<ticks>47995908834</ticks> 	<ticks_per_cycle>11998977208</ticks_per_cycle> 	</program>
<program> 	<file>cpp/stack_objects.cpp</file> 	<name>cpp-stack_objects</name> 	<instructions>82</instructions> 	<cycles>256</cycles> 	<time>4.27</time> 	<time_per_cycle>.0166796875000000</time_per_cycle> 	<ticks>12757472737</ticks> 	<ticks_per_cycle>49833877</ticks_per_cycle> 	</program>
<program> 	<file>cpp/lambdas.cpp</file> 	<name>cpp-lambdas</name> 	<instructions>485</instructions> 	<cycles>2</cycles> 	<time>12.08</time> 	<time_per_cycle>6.0400000000000000</time_per_cycle> 	<ticks>37545225000</ticks> 	<ticks_per_cycle>18772612500</ticks_per_cycle> 	</program>
<program> 	<file>cpp/objects.cpp</file> 	<name>cpp-objects</name> 	<instructions>432</instructions> 	<cycles>2</cycles> 	<time>12.88</time> 	<time_per_cycle>6.4400000000000000</time_per_cycle> 	<ticks>38429020512</ticks> 	<ticks_per_cycle>19214510256</ticks_per_cycle> 	</program>
<program> 	<file>cpp/loop.cpp</file> 	<name>cpp-loop</name> 	<instructions>126</instructions> 	<cycles>134217728</cycles> 	<time>1.10</time> 	<time_per_cycle>.0000000081956386</time_per_cycle> 	<ticks>3299123459</ticks> 	<ticks_per_cycle>24</ticks_per_cycle> 	</program>
<program> 	<file>cpp/inlines.cpp</file> 	<name>cpp-inlines</name> 	<instructions>68</instructions> 	<cycles>256</cycles> 	<time>2.02</time> 	<time_per_cycle>.0078906250000000</time_per_cycle> 	<ticks>6214377012</ticks> 	<ticks_per_cycle>24274910</ticks_per_cycle> 	</program>
<program> 	<file>cpp/matrixes.cpp</file> 	<name>cpp-matrixes</name> 	<instructions>166</instructions> 	<cycles>134217728</cycles> 	<time>1.94</time> 	<time_per_cycle>.0000000144541263</time_per_cycle> 	<ticks>5749373241</ticks> 	<ticks_per_cycle>42</ticks_per_cycle> 	</program>
<program> 	<file>cpp/binpow-matrix.cpp</file> 	<name>cpp-binpow-matrix</name> 	<instructions>165</instructions> 	<cycles>67108864</cycles> 	<time>1.89</time> 	<time_per_cycle>.0000000281631946</time_per_cycle> 	<ticks>5776501318</ticks> 	<ticks_per_cycle>86</ticks_per_cycle> 	</program>
<program> 	<file>cpp/functions.cpp</file> 	<name>cpp-functions</name> 	<instructions>86</instructions> 	<cycles>256</cycles> 	<time>9.11</time> 	<time_per_cycle>.0355859375000000</time_per_cycle> 	<ticks>25879315313</ticks> 	<ticks_per_cycle>101091075</ticks_per_cycle> 	</program>
<program> 	<file>rust/structs.rs</file> 	<name>rust-structs</name> 	<instructions>706</instructions> 	<cycles>256</cycles> 	<time>247.05</time> 	<time_per_cycle>.9650390625000000</time_per_cycle> 	<ticks>741228384050</ticks> 	<ticks_per_cycle>2895423375</ticks_per_cycle> 	</program>
<program> 	<file>rust/recursion.rs</file> 	<name>rust-recursion</name> 	<instructions>594</instructions> 	<cycles>2147483648</cycles> 	<time>0.01</time> 	<time_per_cycle>.0000000000046566</time_per_cycle> 	<ticks>36973285</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>lisp/recursion.lisp</file> 	<name>lisp-recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>12.85</time> 	<time_per_cycle>.0501953125000000</time_per_cycle> 	<ticks>37371170752</ticks> 	<ticks_per_cycle>145981135</ticks_per_cycle> 	</program>
<program> 	<file>haskell/recursion.hi haskell/recursion.hs</file> 	<name>haskell-recursion</name> 	<instructions>1184</instructions> 	<cycles>256</cycles> 	<time>61.06</time> 	<time_per_cycle>.2385156250000000</time_per_cycle> 	<ticks>137397929518</ticks> 	<ticks_per_cycle>536710662</ticks_per_cycle> 	</program>
<program> 	<file>haskell/iterate.hi haskell/iterate.hs</file> 	<name>haskell-iterate</name> 	<instructions>1174</instructions> 	<cycles>1048576</cycles> 	<time>1.47</time> 	<time_per_cycle>.0000014019012451</time_per_cycle> 	<ticks>4605807307</ticks> 	<ticks_per_cycle>4392</ticks_per_cycle> 	</program>
<program> 	<file>haskell/zipwith.hi haskell/zipwith.hs</file> 	<name>haskell-zipwith</name> 	<instructions>1150</instructions> 	<cycles>4194304</cycles> 	<time>2.29</time> 	<time_per_cycle>.0000005459785461</time_per_cycle> 	<ticks>5658695678</ticks> 	<ticks_per_cycle>1349</ticks_per_cycle> 	</program>
<program> 	<file>haskell/polymorphic_recursion.hi haskell/polymorphic_recursion.hs</file> 	<name>haskell-polymorphic_recursion</name> 	<instructions>2226</instructions> 	<cycles>8</cycles> 	<time>18.15</time> 	<time_per_cycle>2.2687500000000000</time_per_cycle> 	<ticks>57738013571</ticks> 	<ticks_per_cycle>7217251696</ticks_per_cycle> 	</program>
<program> 	<file>haskell/object_dynamic.hi haskell/object_dynamic.hs</file> 	<name>haskell-object_dynamic</name> 	<instructions>1313</instructions> 	<cycles>131072</cycles> 	<time>1.07</time> 	<time_per_cycle>.0000081634521484</time_per_cycle> 	<ticks>3374427585</ticks> 	<ticks_per_cycle>25744</ticks_per_cycle> 	</program>
<program> 	<file>haskell/tail_recursion.hi haskell/tail_recursion.hs</file> 	<name>haskell-tail_recursion</name> 	<instructions>1204</instructions> 	<cycles>524288</cycles> 	<time>1.48</time> 	<time_per_cycle>.0000028228759765</time_per_cycle> 	<ticks>4633473689</ticks> 	<ticks_per_cycle>8837</ticks_per_cycle> 	</program>
<program> 	<file>haskell/object.hi haskell/object.hs</file> 	<name>haskell-object</name> 	<instructions>1356</instructions> 	<cycles>8</cycles> 	<time>13.62</time> 	<time_per_cycle>1.7025000000000000</time_per_cycle> 	<ticks>41971325790</ticks> 	<ticks_per_cycle>5246415723</ticks_per_cycle> 	</program>
<program> 	<file>haskell/adt.hi haskell/adt.hs</file> 	<name>haskell-adt</name> 	<instructions>1289</instructions> 	<cycles>256</cycles> 	<time>79.99</time> 	<time_per_cycle>.3124609375000000</time_per_cycle> 	<ticks>239810665709</ticks> 	<ticks_per_cycle>936760412</ticks_per_cycle> 	</program>
<program> 	<file></file> 	<name>go-fast</name> 	<instructions>1</instructions> 	<cycles>134217728</cycles> 	<time>1.96</time> 	<time_per_cycle>.0000000146031379</time_per_cycle> 	<ticks>6418624720</ticks> 	<ticks_per_cycle>47</ticks_per_cycle> 	</program>
<program> 	<file></file> 	<name>go-structs</name> 	<instructions>1</instructions> 	<cycles>4</cycles> 	<time>22.42</time> 	<time_per_cycle>5.6050000000000000</time_per_cycle> 	<ticks>72645009583</ticks> 	<ticks_per_cycle>18161252395</ticks_per_cycle> 	</program>
<program> 	<file></file> 	<name>go-recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>4.55</time> 	<time_per_cycle>.0177734375000000</time_per_cycle> 	<ticks>13021616603</ticks> 	<ticks_per_cycle>50865689</ticks_per_cycle> 	</program>
<program> 	<file>java/Objects.java</file> 	<name>java-Objects</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>246.84</time> 	<time_per_cycle>.9642187500000000</time_per_cycle> 	<ticks>737215649278</ticks> 	<ticks_per_cycle>2879748629</ticks_per_cycle> 	</program>
<program> 	<file>java/Functions.java</file> 	<name>java-Functions</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>3.34</time> 	<time_per_cycle>.0130468750000000</time_per_cycle> 	<ticks>10322449582</ticks> 	<ticks_per_cycle>40322068</ticks_per_cycle> 	</program>
<program> 	<file>java/Recursion.java</file> 	<name>java-Recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>3.23</time> 	<time_per_cycle>.0126171875000000</time_per_cycle> 	<ticks>10134819000</ticks> 	<ticks_per_cycle>39589136</ticks_per_cycle> 	</program>
</programs></fibonacci>