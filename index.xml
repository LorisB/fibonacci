<fibonacci input='32' date='2022-03-03' uname='Linux x3.0dmx.com 4.15.0-118-generic #119-Ubuntu SMP Tue Sep 8 12:30:01 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux'><headers><h m='file' short='Program' type='text'>File name as it's seen in the source code repository</h><h m='instructions' short='ASM'>Total number of Assembly instructions seen in the compiled .asm file; not every compiler provides this information though</h><h m='cycles' short='Cycles'>How many times the Fibonacci number has been calculated</h><h m='time' short='Time'>How many seconds it took to execute all calculations</h><h m='time_per_cycle' short='SPC'>How many seconds per each calculation</h><h m='ticks' short='Ticks'>How many total CPU ticks it took to execute all calculations, according to perf</h><h m='ticks_per_cycle' short='TPC'>How many ticks per a single calculation</h><h m='ghz' short='GHz'>TPC divided by SPC and divided by one billion; this is approximately how fast is the CPU; this metric for all programs is expected to have almost the same values, otherwise something is wrong with the method</h></headers><programs><program> 	<file>cpp/interpreter.cpp</file> 	<name>cpp-interpreter</name> 	<instructions>3125</instructions> 	<cycles>8192</cycles> 	<time>1.89</time> 	<time_per_cycle>.0002307128906250</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>cpp/formula.cpp</file> 	<name>cpp-formula</name> 	<instructions>197</instructions> 	<cycles>8388608</cycles> 	<time>1.68</time> 	<time_per_cycle>.0000002002716064</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>cpp/recursion.cpp</file> 	<name>cpp-recursion</name> 	<instructions>72</instructions> 	<cycles>256</cycles> 	<time>5.43</time> 	<time_per_cycle>.0212109375000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>cpp/static_member_functions.cpp</file> 	<name>cpp-static_member_functions</name> 	<instructions>116</instructions> 	<cycles>256</cycles> 	<time>14.61</time> 	<time_per_cycle>.0570703125000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>cpp/decorators.cpp</file> 	<name>cpp-decorators</name> 	<instructions>366</instructions> 	<cycles>256</cycles> 	<time>6.32</time> 	<time_per_cycle>.0246875000000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>cpp/functions_with_new.cpp</file> 	<name>cpp-functions_with_new</name> 	<instructions>269</instructions> 	<cycles>1</cycles> 	<time>15.99</time> 	<time_per_cycle>15.9900000000000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>1</ticks_per_cycle> 	</program>
<program> 	<file>cpp/stack_objects.cpp</file> 	<name>cpp-stack_objects</name> 	<instructions>173</instructions> 	<cycles>256</cycles> 	<time>48.83</time> 	<time_per_cycle>.1907421875000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>cpp/lambdas.cpp</file> 	<name>cpp-lambdas</name> 	<instructions>309</instructions> 	<cycles>1</cycles> 	<time>20.29</time> 	<time_per_cycle>20.2900000000000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>1</ticks_per_cycle> 	</program>
<program> 	<file>cpp/objects.cpp</file> 	<name>cpp-objects</name> 	<instructions>898</instructions> 	<cycles>1</cycles> 	<time>22.84</time> 	<time_per_cycle>22.8400000000000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>1</ticks_per_cycle> 	</program>
<program> 	<file>cpp/loop.cpp</file> 	<name>cpp-loop</name> 	<instructions>73</instructions> 	<cycles>16777216</cycles> 	<time>1.23</time> 	<time_per_cycle>.0000000733137130</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>cpp/inlines.cpp</file> 	<name>cpp-inlines</name> 	<instructions>107</instructions> 	<cycles>256</cycles> 	<time>14.38</time> 	<time_per_cycle>.0561718750000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>cpp/matrixes.cpp</file> 	<name>cpp-matrixes</name> 	<instructions>463</instructions> 	<cycles>262144</cycles> 	<time>1.10</time> 	<time_per_cycle>.0000041961669921</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>cpp/binpow-matrix.cpp</file> 	<name>cpp-binpow-matrix</name> 	<instructions>326</instructions> 	<cycles>2097152</cycles> 	<time>1.74</time> 	<time_per_cycle>.0000008296966552</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>cpp/functions.cpp</file> 	<name>cpp-functions</name> 	<instructions>116</instructions> 	<cycles>256</cycles> 	<time>14.36</time> 	<time_per_cycle>.0560937500000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>rust/structs.rs</file> 	<name>rust-structs</name> 	<instructions>4164</instructions> 	<cycles>8</cycles> 	<time>12.32</time> 	<time_per_cycle>1.5400000000000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>rust/recursion.rs</file> 	<name>rust-recursion</name> 	<instructions>3998</instructions> 	<cycles>256</cycles> 	<time>9.40</time> 	<time_per_cycle>.0367187500000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>lisp/recursion.lisp</file> 	<name>lisp-recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>16.87</time> 	<time_per_cycle>.0658984375000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>haskell/recursion.hi haskell/recursion.hs</file> 	<name>haskell-recursion</name> 	<instructions>1208</instructions> 	<cycles>256</cycles> 	<time>50.51</time> 	<time_per_cycle>.1973046875000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>haskell/zipwith.hi haskell/zipwith.hs</file> 	<name>haskell-zipwith</name> 	<instructions>1172</instructions> 	<cycles>2097152</cycles> 	<time>1.03</time> 	<time_per_cycle>.0000004911422729</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>haskell/objects.hi haskell/objects.hs</file> 	<name>haskell-objects</name> 	<instructions>1325</instructions> 	<cycles>16</cycles> 	<time>19.53</time> 	<time_per_cycle>1.2206250000000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>haskell/polymorphic_recursion.hi haskell/polymorphic_recursion.hs</file> 	<name>haskell-polymorphic_recursion</name> 	<instructions>2253</instructions> 	<cycles>8</cycles> 	<time>17.97</time> 	<time_per_cycle>2.2462500000000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>haskell/object_dynamic.hi haskell/object_dynamic.hs</file> 	<name>haskell-object_dynamic</name> 	<instructions>1302</instructions> 	<cycles>262144</cycles> 	<time>1.68</time> 	<time_per_cycle>.0000064086914062</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>haskell/tail_recursion.hi haskell/tail_recursion.hs</file> 	<name>haskell-tail_recursion</name> 	<instructions>1226</instructions> 	<cycles>524288</cycles> 	<time>1.49</time> 	<time_per_cycle>.0000028419494628</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>haskell/iterate.hi haskell/iterate.hs</file> 	<name>haskell-iterate</name> 	<instructions>1195</instructions> 	<cycles>1048576</cycles> 	<time>1.59</time> 	<time_per_cycle>.0000015163421630</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>haskell/adt.hi haskell/adt.hs</file> 	<name>haskell-adt</name> 	<instructions>1314</instructions> 	<cycles>256</cycles> 	<time>97.27</time> 	<time_per_cycle>.3799609375000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file></file> 	<name>go-fast</name> 	<instructions>1</instructions> 	<cycles>33554432</cycles> 	<time>1.06</time> 	<time_per_cycle>.0000000315904617</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file></file> 	<name>go-structs</name> 	<instructions>1</instructions> 	<cycles>2</cycles> 	<time>12.51</time> 	<time_per_cycle>6.2550000000000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file></file> 	<name>go-recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>4.43</time> 	<time_per_cycle>.0173046875000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>java/Objects.java</file> 	<name>java-Objects</name> 	<instructions>1</instructions> 	<cycles>8</cycles> 	<time>14.83</time> 	<time_per_cycle>1.8537500000000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>java/Functions.java</file> 	<name>java-Functions</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>8.23</time> 	<time_per_cycle>.0321484375000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>java/Recursion.java</file> 	<name>java-Recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>3.44</time> 	<time_per_cycle>.0134375000000000</time_per_cycle> 	<ticks>1</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
</programs></fibonacci>